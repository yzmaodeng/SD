<?xml version="1.0" encoding="GBK"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
	http://www.springframework.org/schema/cache
	http://www.springframework.org/schema/cache/spring-cache-4.0.xsd">

	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />
	<bean id="kfDataService" class="com.sd.service.impl.KfDataServiceImpl"
		scope="prototype" />
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- set the max upload size100MB -->
		<property name="maxUploadSize">
			<value>104857600</value>
		</property>
		<property name="maxInMemorySize">
			<value>4096</value>
		</property>
	</bean>

<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="com.mysql.jdbc.Driver"></property>
 <property name="jdbcUrl" value="jdbc:mysql://123.59.57.187:4040/bonetodaydev?useUnicode=true&amp;characterEncoding=UTF-8"></property>  
		<property name="user" value="develop"></property>
		<property name="password" value="KsybqvY59psM2dNS"></property>
		<property name="initialPoolSize" value="10" />
		<property name="minPoolSize" value="20" />
		<property name="maxPoolSize" value="50" />
		<property name="maxIdleTime" value="7200" />
		<property name="acquireIncrement" value="5" />
		<property name="checkoutTimeout" value="20000" />
		<property name="maxIdleTimeExcessConnections" value="10" />
	</bean>
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<value>
				hibernate.cache.use_second_level_cache=false
				hibernate.cache.use_query_cache=false
				hibernate.jdbc.fetch_size=50
				hibernate.jdbc.batch_size=50
				hibernate.current_session_context_class=org.springframework.orm.hibernate4.SpringSessionContext
				hibernate.show_sql=true
				hibernate.dialect=org.hibernate.dialect.MySQLDialect
				hibernate.connection.autocommit=true
				hibernate.connection.release_mode=auto
				hibernate.format_sql=true
				javax.persistence.validation.mode=none
			</value>
		</property>
		<property name="packagesToScan" value="com.sd.vo" />
	</bean>

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean
		class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor" />

	<context:component-scan base-package="com.sd.*" />

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="sav*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="del*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="add*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="upd*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="qry*" propagation="NOT_SUPPORTED"
				read-only="true" />
			<tx:method name="*" propagation="NOT_SUPPORTED" read-only="true" />
		</tx:attributes>
	</tx:advice>
	<!-- �������� -->
	<aop:config proxy-target-class="true">
		<aop:pointcut id="cut"
			expression="execution(* com.sd.service.impl.*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="cut" />
	</aop:config>

	<!--������ -->
	<bean id="doJob"
		class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
		<property name="durability" value="true"></property>
		<property name="jobClass" value="com.sd.action.TaskJob" />
		<property name="jobDataAsMap">
			<map>
				<entry key="kfDataService" value-ref="kfDataService"></entry>
				<entry key="sessionFactory" value-ref="sessionFactory"></entry>
			</map>
		</property>
	</bean>

	<!-- ������ -->
	<bean id="cronTriggerPunch"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="doJob" />
		<!-- 1 hour -->
		<property name="cronExpression" value="0 30 17 * * ?" />
	</bean>

	<!-- ���õ��ȹ��� -->
	<bean id="startQuertz" autowire="no"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="cronTriggerPunch" />
			</list>
		</property>
	</bean>

</beans>